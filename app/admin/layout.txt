"use client";

import axios, { AxiosError } from "axios";
import { useRouter } from "next/navigation";
import { useEffect, useState } from "react";
import SignIn from "./sign-in/page";
import { SessionProvider, useSession } from "next-auth/react";

interface UserResponse {
  user: string | null;
  error: AxiosError | null;
}

export default function Adminlayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const {data: session} = useSession();

  // const [isSuccess, setIsSuccess] = useState(false);
  // const [isLoading, setIsLoading] = useState(false);

  const router = useRouter();

  // useEffect(() => {
  //   (async () => {
  //     setIsLoading(true);
  //     const { user, error } = await getUser();

  //     if (error) {
  //       router.push("/admin/sign-in");
  //       setIsLoading(false);
  //       return;
  //     }

  //     setIsSuccess(true);
  //     setIsLoading(false);
  //   })();
  // }, []);

  // if (!isSuccess && isLoading) return <p>Loading...</p>;


  return <SessionProvider><main>{children}</main></SessionProvider>;
}

async function getUser(): Promise<UserResponse> {
  try {
    const { data } = await axios.get("/api/auth/me");

    return {
      user: data,
      error: null,
    };
  } catch (e) {
    const error = e as AxiosError;

    return { user: null, error };
  }
}
